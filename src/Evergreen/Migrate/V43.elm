module Evergreen.Migrate.V43 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V41.Auth.Common
import Evergreen.V41.Background.Types
import Evergreen.V41.OAuth
import Evergreen.V41.OAuth.AuthorizationCode
import Evergreen.V41.Point
import Evergreen.V41.Responsive
import Evergreen.V41.Route
import Evergreen.V41.Types
import Evergreen.V43.Auth.Common
import Evergreen.V43.Background.Types
import Evergreen.V43.OAuth
import Evergreen.V43.OAuth.AuthorizationCode
import Evergreen.V43.Point
import Evergreen.V43.Responsive
import Evergreen.V43.Route
import Evergreen.V43.Types
import Lamdera.Migrations exposing (..)
import List
import Maybe
import Result


frontendModel : Evergreen.V41.Types.FrontendModel -> ModelMigration Evergreen.V43.Types.FrontendModel Evergreen.V43.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V41.Types.BackendModel -> ModelMigration Evergreen.V43.Types.BackendModel Evergreen.V43.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V41.Types.FrontendMsg -> MsgMigration Evergreen.V43.Types.FrontendMsg Evergreen.V43.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V41.Types.ToBackend -> MsgMigration Evergreen.V43.Types.ToBackend Evergreen.V43.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V41.Types.BackendMsg -> MsgMigration Evergreen.V43.Types.BackendMsg Evergreen.V43.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V41.Types.ToFrontend -> MsgMigration Evergreen.V43.Types.ToFrontend Evergreen.V43.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V41.Types.FrontendModel -> Evergreen.V43.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , route = old.route |> migrate_Route_Route
    , authFlow = old.authFlow |> migrate_Auth_Common_Flow
    , authRedirectBaseUrl = old.authRedirectBaseUrl
    , dProfile = old.dProfile |> Maybe.map migrate_Responsive_DisplayProfile
    , translationPageModel = old.translationPageModel |> migrate_Types_TranslationPageModel
    , publicConsentChecked = False
    , signupState = old.signupState |> migrate_Types_SignupState
    , maybeAdminData = old.maybeAdminData
    , animationTime = old.animationTime
    , backgroundModel = old.backgroundModel |> Maybe.map migrate_Background_Types_Model
    , publicCredits = old.publicCredits
    , showCreditCounterTooltip = old.showCreditCounterTooltip
    , creditsCounterAnimationState = old.creditsCounterAnimationState
    }


migrate_Auth_Common_Error : Evergreen.V41.Auth.Common.Error -> Evergreen.V43.Auth.Common.Error
migrate_Auth_Common_Error old =
    case old of
        Evergreen.V41.Auth.Common.ErrStateMismatch ->
            Evergreen.V43.Auth.Common.ErrStateMismatch

        Evergreen.V41.Auth.Common.ErrAuthorization p0 ->
            Evergreen.V43.Auth.Common.ErrAuthorization (p0 |> migrate_OAuth_AuthorizationCode_AuthorizationError)

        Evergreen.V41.Auth.Common.ErrAuthentication p0 ->
            Evergreen.V43.Auth.Common.ErrAuthentication (p0 |> migrate_OAuth_AuthorizationCode_AuthenticationError)

        Evergreen.V41.Auth.Common.ErrHTTPGetAccessToken ->
            Evergreen.V43.Auth.Common.ErrHTTPGetAccessToken

        Evergreen.V41.Auth.Common.ErrHTTPGetUserInfo ->
            Evergreen.V43.Auth.Common.ErrHTTPGetUserInfo

        Evergreen.V41.Auth.Common.ErrAuthString p0 ->
            Evergreen.V43.Auth.Common.ErrAuthString p0


migrate_Auth_Common_Flow : Evergreen.V41.Auth.Common.Flow -> Evergreen.V43.Auth.Common.Flow
migrate_Auth_Common_Flow old =
    case old of
        Evergreen.V41.Auth.Common.Idle ->
            Evergreen.V43.Auth.Common.Idle

        Evergreen.V41.Auth.Common.Requested p0 ->
            Evergreen.V43.Auth.Common.Requested p0

        Evergreen.V41.Auth.Common.Pending ->
            Evergreen.V43.Auth.Common.Pending

        Evergreen.V41.Auth.Common.Authorized p0 p1 ->
            Evergreen.V43.Auth.Common.Authorized p0 p1

        Evergreen.V41.Auth.Common.Authenticated p0 ->
            Evergreen.V43.Auth.Common.Authenticated (p0 |> migrate_OAuth_Token)

        Evergreen.V41.Auth.Common.Done p0 ->
            Evergreen.V43.Auth.Common.Done (p0 |> migrate_Auth_Common_UserInfo)

        Evergreen.V41.Auth.Common.Errored p0 ->
            Evergreen.V43.Auth.Common.Errored (p0 |> migrate_Auth_Common_Error)


migrate_Auth_Common_UserInfo : Evergreen.V41.Auth.Common.UserInfo -> Evergreen.V43.Auth.Common.UserInfo
migrate_Auth_Common_UserInfo old =
    old


migrate_Background_Types_Model : Evergreen.V41.Background.Types.Model -> Evergreen.V43.Background.Types.Model
migrate_Background_Types_Model old =
    { seed = old.seed
    , animationTime = old.animationTime
    , pathsAcross = old.pathsAcross |> List.map (Tuple.mapBoth migrate_Background_Types_PathAcross (Maybe.map migrate_Background_Types_PathAcrossAnimationState))
    }


migrate_Background_Types_PathAcross : Evergreen.V41.Background.Types.PathAcross -> Evergreen.V43.Background.Types.PathAcross
migrate_Background_Types_PathAcross old =
    { yPathStart = old.yPathStart
    , sections = old.sections |> List.map migrate_Background_Types_PathSection
    , color =
        old.color
            |> (\rec -> rec)
    }


migrate_Background_Types_PathAcrossAnimationState : Evergreen.V41.Background.Types.PathAcrossAnimationState -> Evergreen.V43.Background.Types.PathAcrossAnimationState
migrate_Background_Types_PathAcrossAnimationState old =
    { pathAcrossTarget = old.pathAcrossTarget |> migrate_Background_Types_PathAcross
    , animationStart = old.animationStart
    }


migrate_Background_Types_PathPiece : Evergreen.V41.Background.Types.PathPiece -> Evergreen.V43.Background.Types.PathPiece
migrate_Background_Types_PathPiece old =
    case old of
        Evergreen.V41.Background.Types.ElbowLeftToUp ->
            Evergreen.V43.Background.Types.ElbowLeftToUp

        Evergreen.V41.Background.Types.ElbowLeftToDown ->
            Evergreen.V43.Background.Types.ElbowLeftToDown

        Evergreen.V41.Background.Types.ElbowUpToRight ->
            Evergreen.V43.Background.Types.ElbowUpToRight

        Evergreen.V41.Background.Types.ElbowDownToRight ->
            Evergreen.V43.Background.Types.ElbowDownToRight

        Evergreen.V41.Background.Types.Right p0 ->
            Evergreen.V43.Background.Types.Right p0

        Evergreen.V41.Background.Types.Up p0 ->
            Evergreen.V43.Background.Types.Up p0

        Evergreen.V41.Background.Types.Down p0 ->
            Evergreen.V43.Background.Types.Down p0


migrate_Background_Types_PathSection : Evergreen.V41.Background.Types.PathSection -> Evergreen.V43.Background.Types.PathSection
migrate_Background_Types_PathSection old =
    { piece = old.piece |> migrate_Background_Types_PathPiece
    , endPointRelative = old.endPointRelative |> migrate_Point_Point
    , startPointRelative = old.startPointRelative |> migrate_Point_Point
    }


migrate_OAuth_AuthorizationCode_AuthenticationError : Evergreen.V41.OAuth.AuthorizationCode.AuthenticationError -> Evergreen.V43.OAuth.AuthorizationCode.AuthenticationError
migrate_OAuth_AuthorizationCode_AuthenticationError old =
    { error = old.error |> migrate_OAuth_ErrorCode
    , errorDescription = old.errorDescription
    , errorUri = old.errorUri
    }


migrate_OAuth_AuthorizationCode_AuthorizationError : Evergreen.V41.OAuth.AuthorizationCode.AuthorizationError -> Evergreen.V43.OAuth.AuthorizationCode.AuthorizationError
migrate_OAuth_AuthorizationCode_AuthorizationError old =
    { error = old.error |> migrate_OAuth_ErrorCode
    , errorDescription = old.errorDescription
    , errorUri = old.errorUri
    , state = old.state
    }


migrate_OAuth_ErrorCode : Evergreen.V41.OAuth.ErrorCode -> Evergreen.V43.OAuth.ErrorCode
migrate_OAuth_ErrorCode old =
    case old of
        Evergreen.V41.OAuth.InvalidRequest ->
            Evergreen.V43.OAuth.InvalidRequest

        Evergreen.V41.OAuth.UnauthorizedClient ->
            Evergreen.V43.OAuth.UnauthorizedClient

        Evergreen.V41.OAuth.AccessDenied ->
            Evergreen.V43.OAuth.AccessDenied

        Evergreen.V41.OAuth.UnsupportedResponseType ->
            Evergreen.V43.OAuth.UnsupportedResponseType

        Evergreen.V41.OAuth.InvalidScope ->
            Evergreen.V43.OAuth.InvalidScope

        Evergreen.V41.OAuth.ServerError ->
            Evergreen.V43.OAuth.ServerError

        Evergreen.V41.OAuth.TemporarilyUnavailable ->
            Evergreen.V43.OAuth.TemporarilyUnavailable

        Evergreen.V41.OAuth.Custom p0 ->
            Evergreen.V43.OAuth.Custom p0


migrate_OAuth_Token : Evergreen.V41.OAuth.Token -> Evergreen.V43.OAuth.Token
migrate_OAuth_Token old =
    case old of
        Evergreen.V41.OAuth.Bearer p0 ->
            Evergreen.V43.OAuth.Bearer p0


migrate_Point_Point : Evergreen.V41.Point.Point -> Evergreen.V43.Point.Point
migrate_Point_Point old =
    old


migrate_Responsive_DisplayProfile : Evergreen.V41.Responsive.DisplayProfile -> Evergreen.V43.Responsive.DisplayProfile
migrate_Responsive_DisplayProfile old =
    case old of
        Evergreen.V41.Responsive.Desktop ->
            Evergreen.V43.Responsive.Desktop

        Evergreen.V41.Responsive.Mobile ->
            Evergreen.V43.Responsive.Mobile


migrate_Route_Route : Evergreen.V41.Route.Route -> Evergreen.V43.Route.Route
migrate_Route_Route old =
    case old of
        Evergreen.V41.Route.Translate ->
            Evergreen.V43.Route.Translate

        Evergreen.V41.Route.Landing ->
            Evergreen.V43.Route.Landing

        Evergreen.V41.Route.Admin ->
            Evergreen.V43.Route.Admin

        Evergreen.V41.Route.Auth p0 ->
            Evergreen.V43.Route.Auth p0

        Evergreen.V41.Route.BadRoute ->
            Evergreen.V43.Route.BadRoute


migrate_Types_BreakdownPart : Evergreen.V41.Types.BreakdownPart -> Evergreen.V43.Types.BreakdownPart
migrate_Types_BreakdownPart old =
    old


migrate_Types_CompletedRequest : Evergreen.V41.Types.CompletedRequest -> Evergreen.V43.Types.CompletedRequest
migrate_Types_CompletedRequest old =
    { inputText = old.inputText
    , translationResult = old.translationResult |> Result.mapError migrate_Types_GptAssistError >> Result.map migrate_Types_Translation
    , maybeSelectedBreakdownPart = old.maybeSelectedBreakdownPart
    }


migrate_Types_EnglishOrEstonian : Evergreen.V41.Types.EnglishOrEstonian -> Evergreen.V43.Types.EnglishOrEstonian
migrate_Types_EnglishOrEstonian old =
    case old of
        Evergreen.V41.Types.English ->
            Evergreen.V43.Types.English

        Evergreen.V41.Types.Estonian ->
            Evergreen.V43.Types.Estonian


migrate_Types_FrontendMsg : Evergreen.V41.Types.FrontendMsg -> Evergreen.V43.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V41.Types.NoOpFrontendMsg ->
            Evergreen.V43.Types.NoOpFrontendMsg

        Evergreen.V41.Types.AuthSigninRequested p0 ->
            Evergreen.V43.Types.AuthSigninRequested p0

        Evergreen.V41.Types.UrlClicked p0 ->
            Evergreen.V43.Types.UrlClicked p0

        Evergreen.V41.Types.UrlChanged p0 ->
            Evergreen.V43.Types.UrlChanged p0

        Evergreen.V41.Types.GotViewport p0 ->
            Evergreen.V43.Types.GotViewport p0

        Evergreen.V41.Types.Resize p0 p1 ->
            Evergreen.V43.Types.Resize p0 p1

        Evergreen.V41.Types.TranslationInputModelChanged p0 ->
            Evergreen.V43.Types.TranslationInputModelChanged (p0 |> migrate_Types_TranslationInputModel)

        Evergreen.V41.Types.SubmitText p0 p1 ->
            Evergreen.V43.Types.SubmitText p0 p1

        Evergreen.V41.Types.ShowExplanation p0 ->
            Evergreen.V43.Types.ShowExplanation (p0 |> migrate_Types_BreakdownPart)

        Evergreen.V41.Types.CycleLoadingAnimation ->
            Evergreen.V43.Types.CycleLoadingAnimation

        Evergreen.V41.Types.EditTranslation p0 ->
            Evergreen.V43.Types.EditTranslation p0

        Evergreen.V41.Types.GotoRoute p0 ->
            Evergreen.V43.Types.GotoRoute (p0 |> migrate_Route_Route)

        Evergreen.V41.Types.GotoTranslate_FocusAndClear ->
            Evergreen.V43.Types.GotoTranslate_FocusAndClear

        Evergreen.V41.Types.StartSignup ->
            Evergreen.V43.Types.StartSignup

        Evergreen.V41.Types.SubmitSignupClicked p0 ->
            Evergreen.V43.Types.SubmitSignupClicked (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V41.Types.SignupFormChanged p0 ->
            Evergreen.V43.Types.SignupFormChanged (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V41.Types.FetchImportantNumber ->
            Evergreen.V43.Types.FetchImportantNumber

        Evergreen.V41.Types.Animate p0 ->
            Evergreen.V43.Types.Animate p0

        Evergreen.V41.Types.FiddleRandomBackroundPath p0 ->
            Evergreen.V43.Types.FiddleRandomBackroundPath p0

        Evergreen.V41.Types.ShowCreditCounterTooltip p0 ->
            Evergreen.V43.Types.ShowCreditCounterTooltip p0


migrate_Types_GptAssistError : Evergreen.V41.Types.GptAssistError -> Evergreen.V43.Types.GptAssistError
migrate_Types_GptAssistError old =
    case old of
        Evergreen.V41.Types.OutOfCredits ->
            Evergreen.V43.Types.OutOfCredits

        Evergreen.V41.Types.ApiProtocolError p0 ->
            Evergreen.V43.Types.ApiProtocolError (p0 |> migrate_Types_ProtocolError)

        Evergreen.V41.Types.GptDecodeError p0 ->
            Evergreen.V43.Types.GptDecodeError p0

        Evergreen.V41.Types.GptExpressedError p0 ->
            Evergreen.V43.Types.GptExpressedError p0


migrate_Types_ProtocolError : Evergreen.V41.Types.ProtocolError -> Evergreen.V43.Types.ProtocolError
migrate_Types_ProtocolError old =
    case old of
        Evergreen.V41.Types.RateLimited ->
            Evergreen.V43.Types.RateLimited

        Evergreen.V41.Types.HttpError p0 ->
            Evergreen.V43.Types.HttpError p0


migrate_Types_RequestState : Evergreen.V41.Types.RequestState -> Evergreen.V43.Types.RequestState
migrate_Types_RequestState old =
    case old of
        Evergreen.V41.Types.Waiting p0 p1 ->
            Evergreen.V43.Types.Waiting p0 p1

        Evergreen.V41.Types.RequestComplete p0 ->
            Evergreen.V43.Types.RequestComplete (p0 |> migrate_Types_CompletedRequest)


migrate_Types_SignupFormModel : Evergreen.V41.Types.SignupFormModel -> Evergreen.V43.Types.SignupFormModel
migrate_Types_SignupFormModel old =
    old


migrate_Types_SignupState : Evergreen.V41.Types.SignupState -> Evergreen.V43.Types.SignupState
migrate_Types_SignupState old =
    case old of
        Evergreen.V41.Types.Inactive ->
            Evergreen.V43.Types.Inactive

        Evergreen.V41.Types.Active p0 ->
            Evergreen.V43.Types.Active (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V41.Types.Submitting ->
            Evergreen.V43.Types.Submitting

        Evergreen.V41.Types.Submitted ->
            Evergreen.V43.Types.Submitted


migrate_Types_Translation : Evergreen.V41.Types.Translation -> Evergreen.V43.Types.Translation
migrate_Types_Translation old =
    { breakdown = old.breakdown
    , translation = old.translation
    , translatedTo = old.translatedTo |> migrate_Types_EnglishOrEstonian
    }


migrate_Types_TranslationInputModel : Evergreen.V41.Types.TranslationInputModel -> Evergreen.V43.Types.TranslationInputModel
migrate_Types_TranslationInputModel old =
    { input = old.input
    }


migrate_Types_TranslationPageModel : Evergreen.V41.Types.TranslationPageModel -> Evergreen.V43.Types.TranslationPageModel
migrate_Types_TranslationPageModel old =
    case old of
        Evergreen.V41.Types.InputtingText p0 ->
            Evergreen.V43.Types.InputtingText (p0 |> migrate_Types_TranslationInputModel)

        Evergreen.V41.Types.RequestSent p0 ->
            Evergreen.V43.Types.RequestSent (p0 |> migrate_Types_RequestState)
