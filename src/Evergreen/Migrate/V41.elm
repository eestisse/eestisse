module Evergreen.Migrate.V41 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Dict
import Evergreen.V39.Background.Types
import Evergreen.V39.Point
import Evergreen.V39.Responsive
import Evergreen.V39.Route
import Evergreen.V39.Types
import Evergreen.V41.Auth.Common
import Evergreen.V41.Background.Types
import Evergreen.V41.Point
import Evergreen.V41.Responsive
import Evergreen.V41.Route
import Evergreen.V41.Types
import Lamdera exposing (Url)
import Lamdera.Migrations exposing (..)
import List
import Maybe
import Result
import Result.Extra
import Url


frontendModel : Evergreen.V39.Types.FrontendModel -> ModelMigration Evergreen.V41.Types.FrontendModel Evergreen.V41.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V39.Types.BackendModel -> ModelMigration Evergreen.V41.Types.BackendModel Evergreen.V41.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V39.Types.FrontendMsg -> MsgMigration Evergreen.V41.Types.FrontendMsg Evergreen.V41.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V39.Types.ToBackend -> MsgMigration Evergreen.V41.Types.ToBackend Evergreen.V41.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V39.Types.BackendMsg -> MsgMigration Evergreen.V41.Types.BackendMsg Evergreen.V41.Types.BackendMsg
backendMsg old =
    MsgMigrated ( migrate_Types_BackendMsg old, Cmd.none )


toFrontend : Evergreen.V39.Types.ToFrontend -> MsgMigration Evergreen.V41.Types.ToFrontend Evergreen.V41.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V39.Types.BackendModel -> Evergreen.V41.Types.BackendModel
migrate_Types_BackendModel old =
    { nowish = old.nowish
    , publicCredits = old.publicCredits
    , emails_backup = old.emails_backup
    , emailsWithConsents = old.emailsWithConsents
    , requests =
        old.requests
            |> List.map
                (\( a, b, c ) ->
                    ( a
                    , ( b, False )
                    , c
                        |> Result.Extra.mapBoth
                            migrate_Types_GptAssistError
                            migrate_Types_Translation
                    )
                )
    , pendingAuths = Dict.empty
    , sessions = Dict.empty
    }


migrate_Types_FrontendModel : Evergreen.V39.Types.FrontendModel -> Evergreen.V41.Types.FrontendModel
migrate_Types_FrontendModel old =
    let
        dummyAuthRedirectBaseUrl : Url.Url
        dummyAuthRedirectBaseUrl =
            { protocol = Url.Https
            , host = "eestisse.lamdera.app"
            , port_ = Nothing
            , query = Nothing
            , fragment = Nothing
            , path = ""
            }
    in
    Evergreen.V41.Types.FrontendModel
        old.key
        (old.route |> migrate_Route_Route)
        Evergreen.V41.Auth.Common.Idle
        dummyAuthRedirectBaseUrl
        (old.dProfile |> Maybe.map migrate_Responsive_DisplayProfile)
        (old.translationPageModel |> migrate_Types_TranslationPageModel)
        (old.signupState |> migrate_Types_SignupState)
        old.maybeAdminData
        old.animationTime
        (old.backgroundModel |> Maybe.map migrate_Background_Types_Model)
        old.publicCredits
        old.showCreditCounterTooltip
        old.creditsCounterAnimationState


migrate_Background_Types_Model : Evergreen.V39.Background.Types.Model -> Evergreen.V41.Background.Types.Model
migrate_Background_Types_Model old =
    { seed = old.seed
    , animationTime = old.animationTime
    , pathsAcross = old.pathsAcross |> List.map (Tuple.mapBoth migrate_Background_Types_PathAcross (Maybe.map migrate_Background_Types_PathAcrossAnimationState))
    }


migrate_Background_Types_PathAcross : Evergreen.V39.Background.Types.PathAcross -> Evergreen.V41.Background.Types.PathAcross
migrate_Background_Types_PathAcross old =
    { yPathStart = old.yPathStart
    , sections = old.sections |> List.map migrate_Background_Types_PathSection
    , color =
        old.color
            |> (\rec -> rec)
    }


migrate_Background_Types_PathAcrossAnimationState : Evergreen.V39.Background.Types.PathAcrossAnimationState -> Evergreen.V41.Background.Types.PathAcrossAnimationState
migrate_Background_Types_PathAcrossAnimationState old =
    { pathAcrossTarget = old.pathAcrossTarget |> migrate_Background_Types_PathAcross
    , animationStart = old.animationStart
    }


migrate_Background_Types_PathPiece : Evergreen.V39.Background.Types.PathPiece -> Evergreen.V41.Background.Types.PathPiece
migrate_Background_Types_PathPiece old =
    case old of
        Evergreen.V39.Background.Types.ElbowLeftToUp ->
            Evergreen.V41.Background.Types.ElbowLeftToUp

        Evergreen.V39.Background.Types.ElbowLeftToDown ->
            Evergreen.V41.Background.Types.ElbowLeftToDown

        Evergreen.V39.Background.Types.ElbowUpToRight ->
            Evergreen.V41.Background.Types.ElbowUpToRight

        Evergreen.V39.Background.Types.ElbowDownToRight ->
            Evergreen.V41.Background.Types.ElbowDownToRight

        Evergreen.V39.Background.Types.Right p0 ->
            Evergreen.V41.Background.Types.Right p0

        Evergreen.V39.Background.Types.Up p0 ->
            Evergreen.V41.Background.Types.Up p0

        Evergreen.V39.Background.Types.Down p0 ->
            Evergreen.V41.Background.Types.Down p0


migrate_Background_Types_PathSection : Evergreen.V39.Background.Types.PathSection -> Evergreen.V41.Background.Types.PathSection
migrate_Background_Types_PathSection old =
    { piece = old.piece |> migrate_Background_Types_PathPiece
    , endPointRelative = old.endPointRelative |> migrate_Point_Point
    , startPointRelative = old.startPointRelative |> migrate_Point_Point
    }


migrate_Point_Point : Evergreen.V39.Point.Point -> Evergreen.V41.Point.Point
migrate_Point_Point old =
    old


migrate_Responsive_DisplayProfile : Evergreen.V39.Responsive.DisplayProfile -> Evergreen.V41.Responsive.DisplayProfile
migrate_Responsive_DisplayProfile old =
    case old of
        Evergreen.V39.Responsive.Desktop ->
            Evergreen.V41.Responsive.Desktop

        Evergreen.V39.Responsive.Mobile ->
            Evergreen.V41.Responsive.Mobile


migrate_Route_Route : Evergreen.V39.Route.Route -> Evergreen.V41.Route.Route
migrate_Route_Route old =
    case old of
        Evergreen.V39.Route.Translate ->
            Evergreen.V41.Route.Translate

        Evergreen.V39.Route.Landing ->
            Evergreen.V41.Route.Landing

        Evergreen.V39.Route.Admin ->
            Evergreen.V41.Route.Admin

        Evergreen.V39.Route.BadRoute ->
            Evergreen.V41.Route.BadRoute


migrate_Types_AdminData : Evergreen.V39.Types.AdminData -> Evergreen.V41.Types.AdminData
migrate_Types_AdminData old =
    old


migrate_Types_BackendMsg : Evergreen.V39.Types.BackendMsg -> Evergreen.V41.Types.BackendMsg
migrate_Types_BackendMsg old =
    case old of
        Evergreen.V39.Types.NoOpBackendMsg ->
            Evergreen.V41.Types.NoOpBackendMsg

        Evergreen.V39.Types.GptResponseReceived p0 p1 p2 ->
            Evergreen.V41.Types.GptResponseReceived p0
                False
                p1
                p2

        Evergreen.V39.Types.AddPublicCredits ->
            Evergreen.V41.Types.AddPublicCredits

        Evergreen.V39.Types.UpdateNow p0 ->
            Evergreen.V41.Types.UpdateNow p0


migrate_Types_BreakdownPart : Evergreen.V39.Types.BreakdownPart -> Evergreen.V41.Types.BreakdownPart
migrate_Types_BreakdownPart old =
    old


migrate_Types_CompletedRequest : Evergreen.V39.Types.CompletedRequest -> Evergreen.V41.Types.CompletedRequest
migrate_Types_CompletedRequest old =
    { inputText = old.inputText
    , translationResult = old.translationResult |> Result.mapError migrate_Types_GptAssistError >> Result.map migrate_Types_Translation
    , maybeSelectedBreakdownPart = old.maybeSelectedBreakdownPart
    }


migrate_Types_EnglishOrEstonian : Evergreen.V39.Types.EnglishOrEstonian -> Evergreen.V41.Types.EnglishOrEstonian
migrate_Types_EnglishOrEstonian old =
    case old of
        Evergreen.V39.Types.English ->
            Evergreen.V41.Types.English

        Evergreen.V39.Types.Estonian ->
            Evergreen.V41.Types.Estonian


migrate_Types_FrontendMsg : Evergreen.V39.Types.FrontendMsg -> Evergreen.V41.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V39.Types.NoOpFrontendMsg ->
            Evergreen.V41.Types.NoOpFrontendMsg

        Evergreen.V39.Types.UrlClicked p0 ->
            Evergreen.V41.Types.UrlClicked p0

        Evergreen.V39.Types.UrlChanged p0 ->
            Evergreen.V41.Types.UrlChanged p0

        Evergreen.V39.Types.GotViewport p0 ->
            Evergreen.V41.Types.GotViewport p0

        Evergreen.V39.Types.Resize p0 p1 ->
            Evergreen.V41.Types.Resize p0 p1

        Evergreen.V39.Types.TextInputChanged p0 ->
            Evergreen.V41.Types.TranslationInputModelChanged { input = p0, publicConsentChecked = False }

        Evergreen.V39.Types.SubmitText p0 ->
            Evergreen.V41.Types.SubmitText False p0

        Evergreen.V39.Types.ShowExplanation p0 ->
            Evergreen.V41.Types.ShowExplanation (p0 |> migrate_Types_BreakdownPart)

        Evergreen.V39.Types.CycleLoadingAnimation ->
            Evergreen.V41.Types.CycleLoadingAnimation

        Evergreen.V39.Types.EditTranslation p0 ->
            Evergreen.V41.Types.EditTranslation p0

        Evergreen.V39.Types.GotoRoute p0 ->
            Evergreen.V41.Types.GotoRoute (p0 |> migrate_Route_Route)

        Evergreen.V39.Types.GotoTranslate_FocusAndClear ->
            Evergreen.V41.Types.GotoTranslate_FocusAndClear

        Evergreen.V39.Types.StartSignup ->
            Evergreen.V41.Types.StartSignup

        Evergreen.V39.Types.SubmitSignupClicked p0 ->
            Evergreen.V41.Types.SubmitSignupClicked (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V39.Types.SignupFormChanged p0 ->
            Evergreen.V41.Types.SignupFormChanged (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V39.Types.FetchImportantNumber ->
            Evergreen.V41.Types.FetchImportantNumber

        Evergreen.V39.Types.Animate p0 ->
            Evergreen.V41.Types.Animate p0

        Evergreen.V39.Types.FiddleRandomBackroundPath p0 ->
            Evergreen.V41.Types.FiddleRandomBackroundPath p0

        Evergreen.V39.Types.ShowCreditCounterTooltip p0 ->
            Evergreen.V41.Types.ShowCreditCounterTooltip p0


migrate_Types_GeneralData : Evergreen.V39.Types.GeneralData -> Evergreen.V41.Types.GeneralData
migrate_Types_GeneralData old =
    old


migrate_Types_GptAssistError : Evergreen.V39.Types.GptAssistError -> Evergreen.V41.Types.GptAssistError
migrate_Types_GptAssistError old =
    case old of
        Evergreen.V39.Types.OutOfCredits ->
            Evergreen.V41.Types.OutOfCredits

        Evergreen.V39.Types.ApiProtocolError p0 ->
            Evergreen.V41.Types.ApiProtocolError (p0 |> migrate_Types_ProtocolError)

        Evergreen.V39.Types.GptDecodeError p0 ->
            Evergreen.V41.Types.GptDecodeError p0

        Evergreen.V39.Types.GptExpressedError p0 ->
            Evergreen.V41.Types.GptExpressedError p0


migrate_Types_ProtocolError : Evergreen.V39.Types.ProtocolError -> Evergreen.V41.Types.ProtocolError
migrate_Types_ProtocolError old =
    case old of
        Evergreen.V39.Types.RateLimited ->
            Evergreen.V41.Types.RateLimited

        Evergreen.V39.Types.HttpError p0 ->
            Evergreen.V41.Types.HttpError p0


migrate_Types_RequestState : Evergreen.V39.Types.RequestState -> Evergreen.V41.Types.RequestState
migrate_Types_RequestState old =
    case old of
        Evergreen.V39.Types.Waiting p0 p1 ->
            Evergreen.V41.Types.Waiting p0 p1

        Evergreen.V39.Types.RequestComplete p0 ->
            Evergreen.V41.Types.RequestComplete (p0 |> migrate_Types_CompletedRequest)


migrate_Types_SignupFormModel : Evergreen.V39.Types.SignupFormModel -> Evergreen.V41.Types.SignupFormModel
migrate_Types_SignupFormModel old =
    old


migrate_Types_SignupState : Evergreen.V39.Types.SignupState -> Evergreen.V41.Types.SignupState
migrate_Types_SignupState old =
    case old of
        Evergreen.V39.Types.Inactive ->
            Evergreen.V41.Types.Inactive

        Evergreen.V39.Types.Active p0 ->
            Evergreen.V41.Types.Active (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V39.Types.Submitting ->
            Evergreen.V41.Types.Submitting

        Evergreen.V39.Types.Submitted ->
            Evergreen.V41.Types.Submitted


migrate_Types_ToBackend : Evergreen.V39.Types.ToBackend -> Evergreen.V41.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V39.Types.NoOpToBackend ->
            Evergreen.V41.Types.NoOpToBackend

        Evergreen.V39.Types.SubmitTextForTranslation p0 ->
            Evergreen.V41.Types.SubmitTextForTranslation False p0

        Evergreen.V39.Types.SubmitSignup p0 ->
            Evergreen.V41.Types.SubmitSignup (p0 |> migrate_Types_SignupFormModel)

        Evergreen.V39.Types.RequestImportantNumber ->
            Evergreen.V41.Types.RequestImportantNumber

        Evergreen.V39.Types.RequestGeneralData ->
            Evergreen.V41.Types.RequestGeneralData


migrate_Types_ToFrontend : Evergreen.V39.Types.ToFrontend -> Evergreen.V41.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V39.Types.NoOpToFrontend ->
            Evergreen.V41.Types.NoOpToFrontend

        Evergreen.V39.Types.TranslationResult p0 p1 ->
            Evergreen.V41.Types.TranslationResult p0
                (p1 |> Result.mapError migrate_Types_GptAssistError >> Result.map migrate_Types_Translation)

        Evergreen.V39.Types.EmailSubmitAck ->
            Evergreen.V41.Types.EmailSubmitAck

        Evergreen.V39.Types.AdminDataMsg p0 ->
            Evergreen.V41.Types.AdminDataMsg (p0 |> migrate_Types_AdminData)

        Evergreen.V39.Types.GeneralDataMsg p0 ->
            Evergreen.V41.Types.GeneralDataMsg (p0 |> migrate_Types_GeneralData)

        Evergreen.V39.Types.CreditsUpdated p0 ->
            Evergreen.V41.Types.CreditsUpdated p0


migrate_Types_Translation : Evergreen.V39.Types.Translation -> Evergreen.V41.Types.Translation
migrate_Types_Translation old =
    { breakdown = old.breakdown
    , translation = old.translation
    , translatedTo = old.translatedTo |> migrate_Types_EnglishOrEstonian
    }


migrate_Types_TranslationPageModel : Evergreen.V39.Types.TranslationPageModel -> Evergreen.V41.Types.TranslationPageModel
migrate_Types_TranslationPageModel old =
    case old of
        Evergreen.V39.Types.InputtingText p0 ->
            Evergreen.V41.Types.InputtingText { input = p0, publicConsentChecked = False }

        Evergreen.V39.Types.RequestSent p0 ->
            Evergreen.V41.Types.RequestSent (p0 |> migrate_Types_RequestState)
