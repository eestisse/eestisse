module Evergreen.Migrate.V6 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V3.Types
import Evergreen.V6.Route
import Evergreen.V6.Types
import Lamdera.Migrations exposing (..)
import Route


frontendModel : Evergreen.V3.Types.FrontendModel -> ModelMigration Evergreen.V6.Types.FrontendModel Evergreen.V6.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V3.Types.BackendModel -> ModelMigration Evergreen.V6.Types.BackendModel Evergreen.V6.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V3.Types.FrontendMsg -> MsgMigration Evergreen.V6.Types.FrontendMsg Evergreen.V6.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V3.Types.ToBackend -> MsgMigration Evergreen.V6.Types.ToBackend Evergreen.V6.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V3.Types.BackendMsg -> MsgMigration Evergreen.V6.Types.BackendMsg Evergreen.V6.Types.BackendMsg
backendMsg old =
    MsgMigrated ( migrate_Types_BackendMsg old, Cmd.none )


toFrontend : Evergreen.V3.Types.ToFrontend -> MsgMigration Evergreen.V6.Types.ToFrontend Evergreen.V6.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_FrontendModel : Evergreen.V3.Types.FrontendModel -> Evergreen.V6.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , route = Evergreen.V6.Route.Translate
    , translationPageModel =
        Evergreen.V6.Types.TranslationPageModel
            old.textInput
            Evergreen.V6.Types.NotSubmitted
    }


migrate_Types_BackendMsg : Evergreen.V3.Types.BackendMsg -> Evergreen.V6.Types.BackendMsg
migrate_Types_BackendMsg old =
    case old of
        Evergreen.V3.Types.NoOpBackendMsg ->
            Evergreen.V6.Types.NoOpBackendMsg

        Evergreen.V3.Types.GptResponseReceived p0 p1 p2 ->
            Evergreen.V6.Types.GptResponseReceived p0 p1 p2


migrate_Types_GptAssistError : Evergreen.V3.Types.GptAssistError -> Evergreen.V6.Types.GptAssistError
migrate_Types_GptAssistError old =
    case old of
        Evergreen.V3.Types.ApiProtocolError p0 ->
            Evergreen.V6.Types.ApiProtocolError p0

        Evergreen.V3.Types.GptDecodeError p0 ->
            Evergreen.V6.Types.GptDecodeError p0

        Evergreen.V3.Types.GptExpressedError p0 ->
            Evergreen.V6.Types.GptExpressedError p0


migrate_Types_ToFrontend : Evergreen.V3.Types.ToFrontend -> Evergreen.V6.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V3.Types.NoOpToFrontend ->
            Evergreen.V6.Types.NoOpToFrontend

        Evergreen.V3.Types.TranslationResult p0 p1 ->
            Evergreen.V6.Types.TranslationResult p0
                (p1 |> Result.mapError migrate_Types_GptAssistError >> Result.map migrate_Types_Translation)


migrate_Types_Translation : Evergreen.V3.Types.Translation -> Evergreen.V6.Types.Translation
migrate_Types_Translation old =
    old
